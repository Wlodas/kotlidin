buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
		springLoadedVersion = '1.2.6.RELEASE'
		kotlinVersion = '1.1.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:${springLoadedVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

jar {
	baseName = 'kotlidin'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://maven.vaadin.com/vaadin-addons" }
}

dependencies {
	compile 'com.vaadin:vaadin-spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-validation'
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
	compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	compile 'com.vaadin:vaadin-push'
	compile 'p6spy:p6spy:3.0.0'
	runtime 'com.h2database:h2'
	runtime 'org.springframework.boot:spring-boot-starter-tomcat'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:8.0.4"
	}
}

ext['hibernate.version'] = '5.2.8.Final'

idea {
	module {
		inheritOutputDirs = false
		outputDir = file("$buildDir/kotlin-classes/main/")
		testOutputDir = file("$buildDir/kotlin-classes/test/")
	}
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

springBoot {
	mainClass = 'pl.kotlidin.DemoApplicationKt'
}